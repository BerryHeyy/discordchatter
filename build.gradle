buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.0"
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

version = '1.0'
group = 'io.github.berryheyy'
archivesBaseName = 'discordchatter'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    
    mappings channel: 'official', version: '1.16.5'
    
    runs {
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                discordchatter {
                    source sourceSets.main
                }
            }
        }
    }
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

dependencies {
    shadow("com.squareup.okhttp3:okhttp:4.9.0")
    shadow('com.googlecode.json-simple:json-simple:1.1.1')
    shadow('org.javacord:javacord:3.3.2')

    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "discordchatter",
            "Specification-Vendor": "examplemodsareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"examplemodsareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

shadowJar {
    
    //project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]

    // relocate('org.javacord', "shaded32.org.javacord")
    // relocate("com.squareup.okhttp3", "shaded32.com.squareup.okhttp3")
    // relocate("com.googlecode.json-simple", "shaded32.com.googlecode.json-simple")

    classifier ''
}

reobf {
    shadowJar {}
}

//jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
